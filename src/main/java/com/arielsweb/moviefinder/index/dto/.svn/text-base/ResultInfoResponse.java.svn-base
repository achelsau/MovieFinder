package com.arielsweb.moviefinder.index.impl;

import java.util.HashMap;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Wrapper for the result info prepared for being serialized to JSON and sent to
 * the client
 * 
 * @author Ariel
 */
@XmlRootElement(name = "resultResponseMap")
public class ResultInfoResponse {

    /**
     * holds a set of results returned by the query: <score, result info>;
     * <score, result info>; etc...
     **/
    @XmlElement(name = "resultsMap")
    public HashMap<Long, ResultInfo> resultsMap;

    /**
     * In case the query is persisted -> return its id from the database
     */
    @XmlElement(name = "queryId")
    public Long queryId;

    /**
     * Default constructor
     */
    public ResultInfoResponse() {

    }

    /**
     * Response returned after a quick query is performed. After this operation
     * only the results are the one that we are interested in. The query is not
     * persisted.
     * 
     * @param resultsMap
     *            the map of <score, result> for the query that was sent
     */
    public ResultInfoResponse(HashMap<Long, ResultInfo> resultsMap) {
	this.resultsMap = resultsMap;
    }

    /**
     * Response returned after the operation of persisting a query has been
     * performed. In this case, besides an initial set of results, the id of the
     * query that was persisted into the database is returned
     * 
     * @param resultsMap
     *            the map of <score, result> for the query that was sent
     * @param queryId
     *            the id of the query that was sent
     */
    public ResultInfoResponse(HashMap<Long, ResultInfo> resultsMap, Long queryId) {
	this.resultsMap = resultsMap;
	this.queryId = queryId;
    }

    /**
     * Getters and Setters
     */
    public HashMap<Long, ResultInfo> getResultsMap() {
	return resultsMap;
    }

    public void setResultsMap(HashMap<Long, ResultInfo> resultsMap) {
	this.resultsMap = resultsMap;
    }

    public Long getQueryId() {
	return queryId;
    }

    public void setQueryId(Long queryId) {
	this.queryId = queryId;
    }
}
